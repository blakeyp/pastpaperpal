Current problems that aren't going to be fixed now but could be fixed later down the line if necessary:
   - do not currently cater for papers with questions that go across/over pages (but this is rare as per the guidelines)
   
   - there is an inherent problem with the fact that two text items that appear on the same line (e.g. question text and marks thingy) are sometimes at *slightly* different y positions according to pdfminer - this is a particular problem for the parts cutter which is fooled into thinking a part starts later than it does - to overcome this it will be best to maybe implement my own sorting function that regards text items within a given y tolerance to be at the same y position, or alternatively to make my own class of layout objects (!) which might be necessary if bbox cannot be assigned to
        -- update: this is resolved currently by ordering lt_items according to bottom y position, however this is now causing other (yet less severe) problems e.g. where LTRect is used for lines but for some reason LTRects have bottoms lower than they should - the proposed suggestion to be implemented at a later date (need to get on with other things now!) is to use my own custom sorting algorithm to define an ordering of the lt_items, for example text items could be ordered by the lines of text as produced by the text extractor (the problem I've realised is not necessarily in odd positions of lt_items but in this translating to out-of-order sorting so I could use something else e.g. text extraction to define ordering) - then, non-text lt_items would be added at an appropriate place, and e.g. LTRect items that are deemed probably dividers could be 'collapsed' - this would probably require my own classes and stuff and would take a bit of thought to get working
    
    - another problem now with what if the end of the rubric is not found (i.e. no dividing line), then questions are not extracted - but we want to define an 'end' to the rubric so that this text content does not get passed for keywords extraction/other stuff, so need a solution - perhaps take start of questions as end of rubric where there is no dividing line found (how to implement this though?), or alternatively need to encapsulate/generalise more cases in isDivider() - see '==================' example!